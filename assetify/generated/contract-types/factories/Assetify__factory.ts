/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Assetify, AssetifyInterface } from "../Assetify";

const _abi = [
  {
    type: "function",
    name: "addAssetImage",
    inputs: [
      {
        name: "assetId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "ipfsHash",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "assetShares",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "assets",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
      {
        name: "totalShares",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "sharesAvailable",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pricePerShare",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "balances",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "buyShares",
    inputs: [
      {
        name: "assetId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "sharesToBuy",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "createAsset",
    inputs: [
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
      {
        name: "totalShares",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pricePerShare",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "ipfsHashes",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getAllAssets",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct Assetify.Asset[]",
        components: [
          {
            name: "name",
            type: "string",
            internalType: "string",
          },
          {
            name: "totalShares",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "sharesAvailable",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "pricePerShare",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
          {
            name: "ipfsHashes",
            type: "string[]",
            internalType: "string[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAssetImages",
    inputs: [
      {
        name: "assetId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getContractBalance",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCurrentPrice",
    inputs: [
      {
        name: "assetId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getUserPortfolio",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getUserShares",
    inputs: [
      {
        name: "assetId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "sellShares",
    inputs: [
      {
        name: "assetId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "sharesToSell",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetCreated",
    inputs: [
      {
        name: "assetId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "name",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "totalShares",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "pricePerShare",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "ipfsHashes",
        type: "string[]",
        indexed: false,
        internalType: "string[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ImageAdded",
    inputs: [
      {
        name: "assetId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "ipfsHash",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SharesPurchased",
    inputs: [
      {
        name: "assetId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "buyer",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "newPricePerShare",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SharesSold",
    inputs: [
      {
        name: "assetId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "seller",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "newPricePerShare",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061192c8061001f6000396000f3fe6080604052600436106100c25760003560e01c8063835dc40b1161007f578063c55d0f5611610059578063c55d0f561461020e578063cf35bdd01461022e578063d66d19591461025f578063e190b9381461028c57600080fd5b8063835dc40b146101a3578063beebc5da146101c3578063c2e35d4b146101d657600080fd5b80631edb27e9146100c75780632279a970146100fe5780632acada4d146101135780634903b0d1146101355780636f9fb98a1461017057806379b60f8814610183575b600080fd5b3480156100d357600080fd5b506100e76100e23660046111e5565b6102ac565b6040516100f5929190611243565b60405180910390f35b61011161010c366004611271565b6103ed565b005b34801561011f57600080fd5b506101286106b7565b6040516100f591906112d9565b34801561014157600080fd5b506101626101503660046113d2565b60026020526000908152604090205481565b6040519081526020016100f5565b34801561017c57600080fd5b5047610162565b34801561018f57600080fd5b5061011161019e3660046114a2565b6108ce565b3480156101af57600080fd5b506101626101be3660046114e9565b6109eb565b6101116101d1366004611271565b610a38565b3480156101e257600080fd5b506101626101f13660046114e9565b600160209081526000928352604080842090915290825290205481565b34801561021a57600080fd5b506101626102293660046113d2565b610cc8565b34801561023a57600080fd5b5061024e6102493660046113d2565b610d16565b6040516100f5959493929190611515565b34801561026b57600080fd5b5061027f61027a3660046113d2565b610dee565b6040516100f591906115af565b34801561029857600080fd5b506101116102a73660046115c2565b610f0d565b60008054606091829167ffffffffffffffff8111156102cd576102cd6113eb565b6040519080825280602002602001820160405280156102f6578160200160208202803683370190505b50600080549192509067ffffffffffffffff811115610317576103176113eb565b604051908082528060200260200182016040528015610340578160200160208202803683370190505b50905060005b6000548110156103e25760008181526001602090815260408083206001600160a01b038a168452909152902054156103da578083828151811061038b5761038b6116ba565b60209081029190910181019190915260008281526001825260408082206001600160a01b038a168352909252205482518390839081106103cd576103cd6116ba565b6020026020010181815250505b600101610346565b509094909350915050565b60005482106104175760405162461bcd60e51b815260040161040e906116d0565b60405180910390fd5b600080838154811061042b5761042b6116ba565b60009182526020808320868452600182526040808520338652909252922054600690910290910191508211156104a35760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f75676820736861726573206f776e6564000000000000000000604482015260640161040e565b6000805b838110156105215760038301546104be9083611714565b9150826001015483600301546104d49190611727565b8360030154111561051157826001015483600301546104f39190611727565b8360030160008282546105069190611749565b909155506105199050565b600060038401555b6001016104a7565b5060008481526002602052604090205481116105d5578282600201600082825461054b9190611714565b9091555050600084815260016020908152604080832033845290915281208054859290610579908490611749565b9091555050604051339082156108fc029083906000818181858888f193505050501580156105ab573d6000803e3d6000fd5b50600084815260026020526040812080548392906105ca908490611749565b909155506106679050565b828260020160008282546105e99190611714565b9091555050600084815260016020908152604080832033845290915281208054859290610617908490611749565b9091555050600084815260026020526040808220549051339282156108fc02929190818181858888f19350505050158015610656573d6000803e3d6000fd5b506000848152600260205260408120555b600382015460408051338152602081018690529081019190915284907fc84ba642853b7fceb52ece6998aa2618edc77f7a182996141f2a470af347cea3906060015b60405180910390a250505050565b60606000805480602002602001604051908101604052809291908181526020016000905b828210156108c557838290600052602060002090600602016040518060c001604052908160008201805461070e9061175c565b80601f016020809104026020016040519081016040528092919081815260200182805461073a9061175c565b80156107875780601f1061075c57610100808354040283529160200191610787565b820191906000526020600020905b81548152906001019060200180831161076a57829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b0316815260200160058201805480602002602001604051908101604052809291908181526020016000905b828210156108ae5783829060005260206000200180546108219061175c565b80601f016020809104026020016040519081016040528092919081815260200182805461084d9061175c565b801561089a5780601f1061086f5761010080835404028352916020019161089a565b820191906000526020600020905b81548152906001019060200180831161087d57829003601f168201915b505050505081526020019060010190610802565b5050505081525050815260200190600101906106db565b50505050905090565b60005482106108ef5760405162461bcd60e51b815260040161040e906116d0565b60008281548110610902576109026116ba565b60009182526020909120600690910201600401546001600160a01b0316331461096d5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c79206173736574206f776e65722063616e2061646420696d6167657300604482015260640161040e565b60008281548110610980576109806116ba565b6000918252602080832060056006909302019190910180546001810182559083529120016109ae82826117e7565b50817f9e91988b4e615159c412500179db71d2c90f69abbd10034b51e6b7c343a61ace826040516109df91906118a7565b60405180910390a25050565b600080548310610a0d5760405162461bcd60e51b815260040161040e906116d0565b5060008281526001602090815260408083206001600160a01b03851684529091529020545b92915050565b6000548210610a595760405162461bcd60e51b815260040161040e906116d0565b6000808381548110610a6d57610a6d6116ba565b6000918252602090912060069091020160048101549091506001600160a01b03163303610aec5760405162461bcd60e51b815260206004820152602760248201527f4173736574206f776e65722063616e6e6f7420627579207468656972206f776e6044820152662073686172657360c81b606482015260840161040e565b8060020154821115610b405760405162461bcd60e51b815260206004820152601b60248201527f4e6f7420656e6f7567682073686172657320617661696c61626c650000000000604482015260640161040e565b6000805b83811015610b91576003830154610b5b9083611714565b915082600101548360030154610b719190611727565b836003016000828254610b849190611714565b9091555050600101610b44565b5080341015610bd85760405162461bcd60e51b8152602060048201526013602482015272139bdd08195b9bdd59da08115512081cd95b9d606a1b604482015260640161040e565b82826002016000828254610bec9190611749565b9091555050600084815260016020908152604080832033845290915281208054859290610c1a908490611714565b909155505060008481526002602052604081208054839290610c3d908490611714565b909155505034811015610c8257336108fc610c588334611749565b6040518115909202916000818181858888f19350505050158015610c80573d6000803e3d6000fd5b505b600382015460408051338152602081018690529081019190915284907fce81571c08c76465bdf390ad1abe80af8c51c6c4566e3485f9395f13d5ad6328906060016106a9565b600080548210610cea5760405162461bcd60e51b815260040161040e906116d0565b60008281548110610cfd57610cfd6116ba565b9060005260206000209060060201600301549050919050565b60008181548110610d2657600080fd5b9060005260206000209060060201600091509050806000018054610d499061175c565b80601f0160208091040260200160405190810160405280929190818152602001828054610d759061175c565b8015610dc25780601f10610d9757610100808354040283529160200191610dc2565b820191906000526020600020905b815481529060010190602001808311610da557829003601f168201915b50505050600183015460028401546003850154600490950154939491939092506001600160a01b031685565b6000546060908210610e125760405162461bcd60e51b815260040161040e906116d0565b60008281548110610e2557610e256116ba565b9060005260206000209060060201600501805480602002602001604051908101604052809291908181526020016000905b82821015610f02578382906000526020600020018054610e759061175c565b80601f0160208091040260200160405190810160405280929190818152602001828054610ea19061175c565b8015610eee5780601f10610ec357610100808354040283529160200191610eee565b820191906000526020600020905b815481529060010190602001808311610ed157829003601f168201915b505050505081526020019060010190610e56565b505050509050919050565b60008311610f6c5760405162461bcd60e51b815260206004820152602660248201527f546f74616c20736861726573206d7573742062652067726561746572207468616044820152656e207a65726f60d01b606482015260840161040e565b60008211610fce5760405162461bcd60e51b815260206004820152602960248201527f507269636520706572207368617265206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161040e565b600080546040805160c081018252878152602081018790529081018690526060810185905233608082015260a081018490526001820183559180528151909190600683027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630190819061104190826117e7565b506020828101516001830155604083015160028301556060830151600383015560808301516004830180546001600160a01b0319166001600160a01b0390921691909117905560a0830151805161109e9260058501920190611104565b5050506000818152600160209081526040808320338452909152908190208590555181907ff175b2e0637f161d63fbfb275a8ddce6c20c6a08e716f2a5b482c6474437753b906110f59088908890889088906118ba565b60405180910390a25050505050565b82805482825590600052602060002090810192821561114a579160200282015b8281111561114a578251829061113a90826117e7565b5091602001919060010190611124565b5061115692915061115a565b5090565b8082111561115657600061116e8282611177565b5060010161115a565b5080546111839061175c565b6000825580601f10611193575050565b601f0160209004906000526020600020908101906111b191906111b4565b50565b5b8082111561115657600081556001016111b5565b80356001600160a01b03811681146111e057600080fd5b919050565b6000602082840312156111f757600080fd5b611200826111c9565b9392505050565b60008151808452602080850194506020840160005b838110156112385781518752958201959082019060010161121c565b509495945050505050565b6040815260006112566040830185611207565b82810360208401526112688185611207565b95945050505050565b6000806040838503121561128457600080fd5b50508035926020909101359150565b6000815180845260005b818110156112b95760208185018101518683018201520161129d565b506000602082860101526020601f19601f83011685010191505092915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b858110156113c257603f198b8503018752825160c0815181875261132682880182611293565b838d0151888e01528b8401518c890152606080850151908901526080808501516001600160a01b03169089015260a093840151888203948901949094528351808252938d01939092508c8301915080891b83018d01865b828110156113ab57601f19858303018452611399828751611293565b958f0195938f0193915060010161137d565b509a8d019a97505050938a01935050600101611300565b50919a9950505050505050505050565b6000602082840312156113e457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561142a5761142a6113eb565b604052919050565b600082601f83011261144357600080fd5b813567ffffffffffffffff81111561145d5761145d6113eb565b611470601f8201601f1916602001611401565b81815284602083860101111561148557600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156114b557600080fd5b82359150602083013567ffffffffffffffff8111156114d357600080fd5b6114df85828601611432565b9150509250929050565b600080604083850312156114fc57600080fd5b8235915061150c602084016111c9565b90509250929050565b60a08152600061152860a0830188611293565b602083019690965250604081019390935260608301919091526001600160a01b0316608090910152919050565b60008282518085526020808601955060208260051b8401016020860160005b848110156115a257601f19868403018952611590838351611293565b98840198925090830190600101611574565b5090979650505050505050565b6020815260006112006020830184611555565b600080600080608085870312156115d857600080fd5b843567ffffffffffffffff808211156115f057600080fd5b6115fc88838901611432565b9550602091508187013594506040870135935060608701358181111561162157600080fd5b8701601f8101891361163257600080fd5b803582811115611644576116446113eb565b8060051b611653858201611401565b918252828101850191858101908c84111561166d57600080fd5b86850192505b838310156116a95782358681111561168b5760008081fd5b6116998e8983890101611432565b8352509186019190860190611673565b999c989b5096995050505050505050565b634e487b7160e01b600052603260045260246000fd5b602080825260149082015273105cdcd95d08191bd95cc81b9bdd08195e1a5cdd60621b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610a3257610a326116fe565b60008261174457634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610a3257610a326116fe565b600181811c9082168061177057607f821691505b60208210810361179057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156117e2576000816000526020600020601f850160051c810160208610156117bf5750805b601f850160051c820191505b818110156117de578281556001016117cb565b5050505b505050565b815167ffffffffffffffff811115611801576118016113eb565b6118158161180f845461175c565b84611796565b602080601f83116001811461184a57600084156118325750858301515b600019600386901b1c1916600185901b1785556117de565b600085815260208120601f198616915b828110156118795788860151825594840194600190910190840161185a565b50858210156118975787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020815260006112006020830184611293565b6080815260006118cd6080830187611293565b85602084015284604084015282810360608401526118eb8185611555565b97965050505050505056fea2646970667358221220d1990e26653e12e1be5794160892770d39c691c1099a795a6414bf32dbd6704164736f6c63430008190033";

type AssetifyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssetifyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Assetify__factory extends ContractFactory {
  constructor(...args: AssetifyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<Assetify> {
    return super.deploy(overrides || {}) as Promise<Assetify>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Assetify {
    return super.attach(address) as Assetify;
  }
  override connect(signer: Signer): Assetify__factory {
    return super.connect(signer) as Assetify__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetifyInterface {
    return new utils.Interface(_abi) as AssetifyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Assetify {
    return new Contract(address, _abi, signerOrProvider) as Assetify;
  }
}
